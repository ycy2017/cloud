<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cloud</artifactId>
        <groupId>com.cn.ycy</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>mavenplay</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>

    </dependencies>
    <build>
        <plugins>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>


            <!--maven-jar-plugin  和 maven-dependency-plugin  配合使用-->

            <!-- 本插件用于指定本项目生成的jar包中的MANIFEST.MF文件中的配置
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>cn.dubby.maven.jar.plugin.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
-->
            <!-- 在target 目录下多了一个lib文件,项目依赖的jar被copy到了lib文件中
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/lib
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
 -->
                   <plugin>
                       <artifactId>maven-assembly-plugin</artifactId>
                       <configuration>
                           <!-- 官方提供的 descriptorRef 有 bin, jar-with-dependencies, src, project。 -->
                           <descriptorRefs>
                               <descriptorRef>jar-with-dependencies</descriptorRef>
                           </descriptorRefs>
                           <archive>
                               <manifest>
                                   <mainClass>com.ctrip.search.Demo</mainClass>
                               </manifest>
                           </archive>
                       </configuration>
                       <executions>
                           <execution>
                               <id>make-assembly</id>
                               <phase>package</phase><!-- 绑定到package生命周期阶段上 -->
                               <goals>
                                   <goal>single</goal>
                               </goals>
                           </execution>
                       </executions>
                   </plugin>

            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                </configuration>
                <executions>
                    <execution>
                        &lt;!&ndash; 执行package的phase &ndash;&gt;
                        <phase>package</phase>
                        &lt;!&ndash; 为这个phase绑定goal &ndash;&gt;
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            &lt;!&ndash; 过滤掉以下文件，不打包 ：解决包重复引用导致的打包错误&ndash;&gt;
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                &lt;!&ndash; 打成可执行的jar包 的主方法入口&ndash;&gt;
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.ctrip.search.Demo</mainClass>
                                </transformer>

                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->



        </plugins>
    </build>
</project>